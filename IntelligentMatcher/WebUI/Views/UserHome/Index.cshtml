@model UserHomeModel

@{
    ViewData["Title"] = "User Management Home";
}

<h1>Users</h1>

<button type="button" class="btn btn-outline-dark" data-toggle="modal" data-target="#AddUserModal">
    AddUser
</button>

<div class="modal fade" id="AddUserModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @*<form asp-action="DumDum">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label asp-for="Popcorn" class="control-label"></label>
                            <input asp-for="Popcorn" class="form-control" />
                            <span asp-validation-for="Popcorn" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="User.Username" class="control-label"></label>
                            <input asp-for="User.Username" class="form-control" />
                            <span asp-validation-for="User.Username" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Submit" class="btn btn-primary" />
                        </div>
                    </form>*@
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="User.accountType" class="control-label"></label>
                        <select asp-for="User.accountType" asp-items="Model.AccountTypes" class="form-control"></select>
                        <span asp-validation-for="User.accountType" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="User.Username" class="control-label"></label>
                        <input asp-for="User.Username" class="form-control" />
                        <span asp-validation-for="User.Username" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="User.Password" class="control-label"></label>
                        <input type="password" asp-for="User.Password" class="form-control" />
                        <span asp-validation-for="User.Password" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="User.FirstName" class="control-label"></label>
                        <input asp-for="User.FirstName" class="form-control" />
                        <span asp-validation-for="User.FirstName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="User.LastName" class="control-label"></label>
                        <input asp-for="User.LastName" class="form-control" />
                        <span asp-validation-for="User.LastName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="User.email" class="control-label"></label>
                        <input asp-for="User.email" class="form-control" />
                        <span asp-validation-for="User.email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="User.DateOfBirth" class="control-label"></label>
                        <input type="date" value="@DateTime.Today.Date" asp-for="User.DateOfBirth" class="form-control" />
                        <span asp-validation-for="User.DateOfBirth" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="hidden" value="@DateTime.UtcNow" asp-for="User.AccountCreationDate" class="form-control" />
                        <span asp-validation-for="User.AccountCreationDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="container-fluid">
        <div class="table-responsive">
            <table class="table table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>User Id</></th>
                        <th>Username</></th>
                        <th>First Name</></th>
                        <th>Last Name</></th>
                        <th>Account Creation Date</></th>
                        <th>Account Status</></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="dynamic-body">
                    @for (int i = 0; i < Model.UserList.Count; ++i)
                    {                     
                        <tr id="dynamic-row" onmouseover="mouseOverRow(this, @i)" onmouseout="mouseOutRow(this, @i)">                           
                            <td>
                                @Html.DisplayFor(modelItem => Model.UserList[i].UserId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.UserList[i].Username)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.UserList[i].FirstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.UserList[i].LastName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.UserList[i].AccountCreationDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.UserList[i].accountStatus)
                            </td>
                            <td id="lastDynamicIndex"class="btn-group dropright">
                                <button type="button" id="three-dot-button-box" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <div id="three-dot-button-div">
                                        <i class="fas fa-ellipsis-v" id="three-dot-button"></i>
                                    </div>

                                </button>
                                <div class="dropdown-menu">
                                    <a class="dropdown-item" href="#">Reset Password</a>
                                    <a class="dropdown-item" href="#">Disable User</a>
                                    <a class="dropdown-item" href="#">Delete Account</a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{}
}

<script>
    function mouseOverRow(id, i) {
        document.getElementById("dynamic-body").children[i].querySelector("i").style.color = "grey";
    }

    function mouseOutRow(id, i) {
        document.getElementById("dynamic-body").children[i].querySelector("i").style.color = "transparent";
    }
</script>

